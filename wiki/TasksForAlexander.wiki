#summary Список доработок для Саши.

 * ~~Доработать структуры с учетом механизма назначения теста. ?~~
   * ~~Связь !TestTrace<->!User и используется для этого? Получается что !TestTrace создается на этапе назначения теста.~~
AEL: Добавлена новая таблица Assignment, где фиксируется назначение пользователя на тест. После логина пользователя проверяется наличие записи в Assignment и, если такая существует, происходит создание TestTrace. Если Assignment.testStarted == false по прошествии указанного интервала времени (испытуемый на тест не явился), то в !UserHistory заносится соответствующая информация.
 * ~~Проверить наличие сиквенсов для всех сущностей (Discipline, etc.)~~
   * ~~Сиквенсы есть, в маппинге их нету.~~
 * ~~Флажок правильности ответа в !QuestionTrace.~~
   * ~~Аналогичный флажок в !TestTrace(надо ли в !TestTrace хранить результат???)~~
AEL: Имеет смысл.
 * ~~Поле код вопроса (? ну в бамажке Фирсова такое было) в Question~~
AEL: Поле тяжело поддерживать в актуальном состоянии. В принципе можно использовать формулу. Пока сделай в GUI. 

KVG: Поле составное, причем последний компонент поля уникален для каждого вопроса (судя по бумажке Фирсова), таким образом может все таки сделать поля в базе запонять его автоматом на основе выбранных параметров + случайное число, пользователю менять запретить. По этому полю было бы удобно построить индекс и оно бы служило бизнес кеем для юзера при поиске нужных ему вопросов. ?

AEL: Как я уже говорил, пользователю будет куда более удобно работать с выбором из списка, нежели вводить некие коды, расшифровку которых нужно помнить.
 * ~~User: роли?~~
 * ~~Связь !UserHistory и !TestTrace (nullable) ?~~
 * ~~Привести в соответствие базу и схему. (например таблицы Test и Question отличаются)~~
 * Подумать про модернизацию XML-JAXB в следствии того что неудобно с ним работать из UI.
   * !QuestionType - поля singleChoice и multipleChoice.
   * !AnswerType в двух инкарнациях - нельзя ли все таки одну заюзать?
 * ~~Реализовать методы !QuestionTraceService.~~
 * Реализовать методы !TestTraceService.
 * ~~Реализовать методы !TestService.~~
 * ~~Реализовать методы !QuestionService.~~
 * ~~Пояснить как работать с полями которые отвечают за генерацию тестов.~~
AEL: Поле Test.selectorType - перечисление типов выбора. На данный момент !SelectorType.ALL (все вопросы теста), !SelectorType.COUNT (заданное количество). Во втором случае дополнительное поле Test.selectorCount задает число выбираемых вопросов.
 * ~~Поле group для идентификации групп по которым осуществлять проверку, флаг в Test о необходимости проверки по группам.~~
 * Сортировка вопросов при выдаче их юзеру.
AEL: О какой сортировке идет речь?
 * Сгенерить побольше тестовых данных.
 * ~~!UserType для xml.~~
 * Доработать структуру согласно посл. беседе с Фирсовым (см. [FirsovMeeting]).
   * Test не связан с Question.
   * SelectorType and etc. порезать.
   * Теперь в Тесте задается Дисциплина,Раздел и т.д.
   * Добавить иерархию Дисциплина->Раздел->Тема, убрать категории.
   * Как то учесть кол-во баллов для преодоления каждой сложности.
   * Убираем Part?
   * Модифицировать структуры User согласно новым требованиям.
   * Добавить в XML описания новых типов ответов.
   * ... 