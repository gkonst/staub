<?xml version="1.0"?>
<project name="Staub" default="archive" basedir=".">

	<tstamp />

	<!-- ###################### PROPERTY DEFINITIONS ###################### -->

    <property file="${basedir}/build.properties" />

	<property name="seam.debug.lib" value="true"/>

    <property name="project.name" value="staub" />

    <!-- Source directories -->
    <property name="src.java.dir" value="src" />
	<property name="view.dir" value="web" />
	<property name="resources.dir" value="resources" />
	<property name="ds.xml" value="${project.name}-ds.xml" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="ejb.module.dir" value="${project.name}EJB" />
	<property name="ejb.module.src.dir" value="${ejb.module.dir}/src" />
	<property name="ejb.module.classes.dir" value="{ejb.module.dir}/classes" />
	<property name="web.module.dir" value="${project.name}WEB" />
	<property name="web.module.src.dir" value="${web.module.dir}/src" />
	<property name="web.module.web.dir" value="${web.module.dir}/web" />
	
	<!-- Deployment directories -->
	<property name="deploy.dir" value="${jboss.home}/server/${jboss.profile}/deploy" />
	<property name="conf.dir" value="${jboss.home}/server/${jboss.profile}/conf" />

	<!-- Target directories -->
	<property name="dist.dir" value="dist" />
	<property name="exploded-archives.dir" value="${basedir}/exploded-archives" />
	<property name="ear.dir" value="${exploded-archives.dir}/${project.name}.ear" />
	<property name="jar.dir" value="${exploded-archives.dir}/${project.name}.jar/" />
	<property name="war.dir" value="${exploded-archives.dir}/${project.name}.war" />
	<property name="ear.deploy.dir" value="${deploy.dir}/${project.name}.ear" />
	<property name="jar.deploy.dir" value="${ear.deploy.dir}/${project.name}.jar" />
	<property name="war.deploy.dir" value="${ear.deploy.dir}/${project.name}.war" />

	<property name="javac.debug" value="true" />
	<property name="javac.deprecation" value="false" />
    <property name="javac.encoding" value="UTF8" />


    <!-- ############## SEAM JARS AND REQUIRED DEPENDENCIES ############### -->
	<!-- 
	  Seam is made up of a number of jars.  They are specified here, with
	  dependencies for each one
	-->

	<!-- Seam core, with required dependencies -->
	<fileset id="seam.jar" dir="${lib.dir}">
		<include name="jboss-seam.jar" />
	</fileset>

	<!-- Seam ui, with required dependencies -->
	<fileset id="seam.ui.jar" dir="${lib.dir}">
		<include name="jboss-seam-ui.jar" />
		<!--include name="commons-beanutils.jar" if="seam.ui.lib" unless="richfaces.lib" /-->
	</fileset>

	<!-- Seam debug, with required dependencies -->
	<fileset id="seam.debug.jar" dir="${lib.dir}">
		<include name="jboss-seam-debug.jar" if="seam.debug.lib" />
	</fileset>

	<!-- Dependencies for using Seam with JSF - only needed if the server 
	     doesn't come with JSF! -->
	<fileset id="jsf.jar" dir="${lib.dir}">
		<include name="jsf-api.jar" />
		<include name="jsf-impl.jar" />
		<include name="jstl.jar" />
	</fileset>
	
	<!-- jboss-el -->
	<fileset id="jboss-el.jar" dir="${lib.dir}">
		<include name="jboss-el.jar" />
	</fileset>

	<!-- ############## OPTIONAL DEPENDENCIES FOR USING SEAM ############## -->
	<!-- Optional UI jars -->
	<!-- Dependencies for using Seam with facelets -->
	<fileset id="facelets.jar" dir="${lib.dir}">
		<include name="jsf-facelets.jar" />
	</fileset>

	<!-- Dependencies for using Seam with Richfaces -->
	<fileset id="richfaces-api.jar" dir="${lib.dir}">
		<include name="richfaces-api.jar" />
		<include name="commons-beanutils.jar" />
		<include name="commons-digester.jar" />
	</fileset>
	
	<fileset id="richfaces-impl.jar" dir="${lib.dir}">
		<include name="richfaces-impl.jar" />
		<include name="richfaces-ui.jar" />
	</fileset>

	<!-- ############### RESOURCES FOR EXAMPLES ################ -->
	<!--
	  A number of configuration files are needed for Seam, and it's 
	  dependencies.  The examples place all their configuration files in the
	  resources directory.  They aren't split along packaging lines (as this
	  varies depending on what platform you deploy to), but rather by location.
	  Here, therefore, we split them into the ejb, the war and the ear. 
	  Some resource are also placed in the deploy and conf directory of JBoss
	  AS.
	-->

	<!-- View files -->
	<fileset id="war.web" dir="${web.module.web.dir}">
		<include name="**/*" />
	</fileset>

	<!-- resources to go in the war -->
	<fileset id="war.resources" dir="${resources.dir}">
		<include name="WEB-INF/*.xml" />
	</fileset>

	<!-- resources to go in the jar  -->
	<fileset id="jar.resources" dir="${resources.dir}">
        <include name="import.sql" />
        <include name="seam.properties" />
		<include name="META-INF/persistence.xml" />
		<include name="META-INF/ejb-jar.xml" />
		<include name="META-INF/orm.xml" />
		<include name="META-INF/components.xml" />
		<include name="META-INF/jboss.xml" />
		<include name="META-INF/security-config.xml" />
		<include name="META-INF/security-rules.drl" />
		<include name="META-INF/standard-jaxws-endpoint-config.xml" />
	</fileset>

	<!-- Resources to go in the ear -->
	<fileset id="ear.resources" dir="${resources.dir}">
		<include name="META-INF/application.xml" />
		<include name="META-INF/jboss-app.xml" />
		<include name="META-INF/*-service.xml" />
		<include name="META-INF/*-xmbean.xml" />
		<include name="treecache.xml" />
		<include name="*.jpdl.xml" />
		<exclude name=".gpd.*" />
		<include name="*.cfg.xml" />
		<include name="*.xsd" />
		<include name="*.drl" />
	</fileset>

	<!-- Property resources (e.g. themes, i8ln) get put on the classpath -->
	<fileset id="properties" dir="${resources.dir}">
		<exclude name="seam.properties" />
		<include name="*.properties" />
	</fileset>

	<!-- files for Seam Component jars -->
	<patternset id="components-jar.files">
		<include name="**/*.class" />
		<include name="**/*.component.xml" />
		<include name="**/components.xml" />
	</patternset>
	
	<!-- Build classpath -->
	<path id="build.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
			<exclude name="jboss-seam-*.jar" />
		</fileset>
        <fileset dir="${jar.dir}">
			<include name="**/*.class" />
        </fileset>
    </path>
	
	<!-- ##################### BUILD TARGETS (COMMON) ##################### -->
	<!-- 
	  The build targets which are used for all builds
	-->

	<!-- Initialize the build -->
	<target name="init">
		<echo message="Building ${project.name}" />
		<mkdir dir="${jar.dir}" />
		<mkdir dir="${ear.dir}" />
		<mkdir dir="${war.dir}" />
		<mkdir dir="${war.dir}/WEB-INF/classes" />
		<mkdir dir="${dist.dir}" />
	</target>
	    
	<!-- Compile the source code, directly into the jar -->
	<target name="compile" depends="init">
        <echo>lib is ${lib.dir}</echo>
        <javac classpathref="build.classpath" destdir="${jar.dir}" debug="${javac.debug}" deprecation="${javac.deprecation}" nowarn="on" encoding="${javac.encoding}">
			<src path="${ejb.module.src.dir}" />
		</javac>
		<javac classpathref="build.classpath" destdir="${war.dir}/WEB-INF/classes" debug="${javac.debug}" deprecation="${javac.deprecation}" nowarn="on" encoding="${javac.encoding}">
			<src path="${web.module.src.dir}" />
            <classpath path="${jar.dir}" />
        </javac>
	</target>

	<!-- Build the exploded jar -->
	<target name="jar" depends="compile">
		<copy todir="${jar.dir}">
			<fileset refid="jar.resources" />
		</copy>
	</target>

    <!-- Covert and put properties into the classpath -->
    <target name="convertProperties" depends="init">
        <native2ascii src="${resources.dir}" dest="${war.dir}/WEB-INF/classes" encoding="${javac.encoding}">
		    <!--exclude name="seam.properties" /-->
		    <include name="*.properties" />
        </native2ascii>
    </target>

    <!-- Build the exploded war -->
	<target name="war" depends="compile, convertProperties">
		<copy todir="${war.dir}">
			<fileset refid="war.web" />
		</copy>
        <copy todir="${war.dir}/WEB-INF/lib">
			<fileset refid="facelets.jar" />
			<fileset refid="seam.ui.jar" />
			<fileset refid="seam.debug.jar" />
			<fileset refid="richfaces-impl.jar" />
			<mapper type="flatten" />
		</copy>
	</target>

	<target name="clean" description="Cleans up the build directory">
		<delete dir="${dist.dir}" />
		<delete dir="${exploded-archives.dir}" />
		<delete dir="${ear.dir}" />
		<delete dir="${war.dir}" />
		<delete dir="${jar.dir}" />
	</target>


	<!-- #################### BUILD TARGETS (JBOSS AS EAR) #################### -->
	<!-- 
	  The build targets for the examples.  Both unexploded (deploy, undeploy)
	  and unexploded (explode, unexplode, restart) deployment is possible.
	-->

	<!-- Extend the standard war target to add extras which JBoss needs -->
	<target name="jboss.war" depends="war">
		<!-- Copy in resources, with filtering -->
		<copy todir="${war.dir}">
			<fileset refid="war.resources" />
			<filterset>
				<filter token="debug" value="${debug}" />
				<filter token="jndiPattern" value="${project.name}/#{ejbName}/local" />
				<filter token="embeddedEjb" value="false" />
			</filterset>
		</copy>
	</target>

	<!-- Build the exploded ear -->
	<target name="ear">
		<copy todir="${ear.dir}">
			<fileset refid="seam.jar" />
			<fileset refid="ear.resources" />
		</copy>
		<mkdir dir="${ear.dir}/lib" />
		<copy todir="${ear.dir}/lib">
			<fileset refid="richfaces-api.jar" />
		    <fileset refid="jboss-el.jar" />
			<mapper type="flatten" />
		</copy>
	</target>

	<target name="archive" depends="jar,jboss.war,ear" description="Package the archives">
		<jar jarfile="${dist.dir}/${project.name}.jar" basedir="${jar.dir}" />
		<jar jarfile="${dist.dir}/${project.name}.war" basedir="${war.dir}" />
		<jar jarfile="${dist.dir}/${project.name}.ear">
			<fileset dir="${ear.dir}" />
			<fileset dir="${dist.dir}">
				<include name="${project.name}.jar" />
				<include name="${project.name}.war" />
			</fileset>
		</jar>
	</target>

	<!-- Deploy the target to JBoss AS -->
	<target name="deploy" depends="archive, datasource" description="Deploy the example to JBoss AS">
		<fail unless="jboss.home">
			jboss.home not set, update build.properties
		</fail>
		<copy file="${dist.dir}/${project.name}.ear" todir="${deploy.dir}" />
	</target>

	<target name="undeploy" description="Undeploy the example from JBoss">
		<delete file="${deploy.dir}/${project.name}.ear" />
		<delete file="${deploy.dir}/${ds.xml}" />
	</target>

	<!-- Copy the data source to JBoss AS -->
	<target name="datasource">
		<fail unless="jboss.home">jboss.home not set</fail>
        <fail unless="db.url">db.url not set</fail>
        <copy todir="${deploy.dir}">
			<fileset dir="${resources.dir}">
				<include name="${ds.xml}" />
			</fileset>
			<filterset>
				<filter token="dbUrl" value="${db.url}" />
			</filterset>
        </copy>
	</target>

	<target name="explode" depends="jar,jboss.war,ear,datasource" description="Deploy the exploded archive">
		<fail unless="jboss.home">jboss.home not set</fail>

		<mkdir dir="${jar.deploy.dir}" />
		<mkdir dir="${war.deploy.dir}" />

		<copy todir="${jar.deploy.dir}">
			<fileset dir="${jar.dir}" />
		</copy>
		<copy todir="${war.deploy.dir}">
			<fileset dir="${war.dir}" />
		</copy>
		<copy todir="${ear.deploy.dir}">
			<fileset dir="${ear.dir}" />
		</copy>
	</target>

	<target name="unexplode" description="Undeploy the exploded archive">
		<delete failonerror="no">
			<fileset dir="${ear.deploy.dir}">
				<exclude name="**/*.jar" />
			</fileset>
		</delete>
		<delete file="${deploy.dir}/${project.name}-ds.xml" failonerror="no" />
		<delete dir="${ear.deploy.dir}" failonerror="no" />
	</target>

	<target name="restart" depends="explode" description="Restart the exploded archive">
		<touch file="${ear.deploy.dir}/META-INF/application.xml" />
	</target>

	<target name="restartclean" depends="clean, unexplode, restart" description="Clean the example and restart it" />

</project>
